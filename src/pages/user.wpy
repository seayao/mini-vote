<style scoped lang="less">
  .select-user-container {
    padding: 0;
    .operation-btn-wrap {
      display: flex;
      justify-content: space-between;
    }
    .value-class {
      flex: none;
      display: flex;
      align-items: center;
    }
    .user-item {
      display: flex;
      align-items: center;
      .user-avatar {
        width: 40px;
        height: 40px;
        overflow: hidden;
      }
      .username {
        margin-left: 8px;
        font-size: 16px;
        color: #000;
      }
    }
  }
</style>

<template>
  <div class="select-user-container container">
    <van-toast id="van-toast" />
    <van-checkbox-group :value="result">
      <van-cell-group>
        <van-cell
          title="审核">
          <div v-if="result.length">
            <van-button v-if="listQuery.role === 'admin'" type="warning" size="small" @click="handleUpdate('role', 'user')">取消管理员</van-button>
            <div v-else>
              <van-button v-if="listQuery.state === 0" type="primary" size="small" @click="handleUpdate('state', 1)">通过</van-button>
              <div v-else class="operation-btn-wrap">
                <van-button type="primary" size="small" @click="handleUpdate('role', 'admin')">设为管理员</van-button>
                <van-button type="warning" size="small" @click="handleUpdate('state', 0)">禁用</van-button>
              </div>
            </div>
          </div>
          <div v-else>请选择需要操作的用户</div>
        </van-cell>
        <van-cell
          title="全选/反选"
          value-class="value-class"
          clickable
          @click="handleAllSelect">
          <van-checkbox :value="isAllSelect" shape="square"/>
        </van-cell>
        <van-cell
          v-for="(u, index) in userList"
          :key="index"
          value-class="value-class"
          clickable
          @click="handleSelect(u._id)">
          <div class="user-item" slot="title">
            <div class="user-avatar">
              <van-image
                :src="u.avatarUrl"
                width="40"
                height="40"
                radius="4"
                lazy-load
                fit="cover"/>
            </div>
            <div class="username">{{ u.username }}</div>
          </div>
          <van-checkbox :value="u._id" :name="u._id"/>
        </van-cell>
      </van-cell-group>
    </van-checkbox-group>
  </div>
</template>

<script>
import wepy from '@wepy/core'
import { userUpdateApi } from '@/api/user'
import { mapState } from '@wepy/x'
import store from '@/store'
import Toast from '@/vant/toast/toast'

wepy.page({
  store,
  onLoad(option) {
    const state = Number(option.state)
    const role = option.role
    if (state === 0) {
      this.pageTitle = '待审核'
      this.listQuery = {
        state
      }
    } else if (state === 1) {
      if (role === 'admin') {
        this.pageTitle = '管理员'
      } else {
        this.pageTitle = '嘉宾'
      }
      this.listQuery = {
        state,
        role
      }
    }
    this.getList()
  },
  onReady() {
    wx.setNavigationBarTitle({
      title: this.pageTitle
    })
  },
  data: {
    pageTitle: '',
    listQuery: {},
    listLoading: false,
    isAllSelect: false,
    result: [],
    userList: [],
    updateCounter: 0
  },
  computed: {
    ...mapState(['userInfo'])
  },
  attached() {
  },
  methods: {
    getList() {
      this.listLoading = true
      wx.cloud.callFunction({
        name: 'getCollection',
        data: {
          db: 'user',
          data: this.listQuery
        }
      }).then(response => {
        this.listLoading = false
        const res = response.result
        this.userList = res.data
      }).catch(() => {
        this.listLoading = false
      })
    },
    handleAllSelect() { // 是否全选
      if (this.isAllSelect) {
        this.result = []
        this.isAllSelect = false
      } else {
        this.result = this.userList.map(u => {
          return u._id
        })
        this.isAllSelect = true
      }
    },
    handleSelect(id) { // 选择某一个
      const index = this.result.indexOf(id)
      if (index > -1) {
        this.result.splice(index, 1)
      } else {
        this.result.push(id)
      }
      this.isAllSelect = (this.result.length === this.userList.length)
    },
    handleUpdate(type, data) {
      if (this.result && this.result.length) {
        this.updateCounter = 0
        Toast.loading({
          duration: 0,       // 持续展示 toast
          forbidClick: true, // 禁用背景点击
          message: '加载中...'
        })
        const tempTime = new Date().getTime()
        let tempData = null
        if (type === 'state') {
          tempData = {
            state: data,
            updateTime: tempTime
          }
        } else {
          tempData = {
            role: data,
            updateTime: tempTime
          }
        }
        this.result.forEach(_id => {
          this.updateData(_id, tempData)
        })
      }
    },
    updateData(_id, temp) {
      wx.cloud.callFunction({
        name: 'updateCollection',
        data: {
          db: 'user',
          indexKey: _id,
          data: temp
        }
      }).then(response => {
        this.updateCounter++
        if (_id === this.userInfo._id) {
          const tempUser = Object.assign({}, this.userInfo, temp)
          store.dispatch('setUserInfo', tempUser) // 存储用户信息到store
        }
        if (this.updateCounter === this.result.length) {
          Toast.clear()
          this.result = []
          this.getList()
        }
      }).catch(() => {
        Toast.clear()
      })
    }
  }
})
</script>
<config>
  {
    "navigationBarTitleText": "...",
    "usingComponents": {
      "van-cell": "../vant/cell/index",
      "van-cell-group": "../vant/cell-group/index",
      "van-checkbox": "../vant/checkbox/index",
      "van-checkbox-group": "../vant/checkbox-group/index",
      "van-image": "../vant/image/index",
      "van-divider": "../vant/divider/index",
      "van-button": "../vant/button/index",
      "van-toast": "../vant/toast/index"
    }
  }
</config>
