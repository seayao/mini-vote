<style scoped lang="less">
  .mine-container {
    padding: 0;
    background: #ededed;
  }

  .mine-top {
    display: flex;
    justify-content: space-between;
    width: 100%;
    height: 90px;
    padding: 10px;
    background: #fff;
    box-sizing: border-box;
    .mine-top-l {
      display: flex;
      .user-avatar-wrap {
        width: 70px;
        height: 70px;
        border-radius: 7px;
        overflow: hidden;
      }
      .nickname-wrap {
        margin-left: 10px;
        font-size: 18px;
        color: #000;
      }
    }

    .auth-wrap {
      display: flex;
      align-items: flex-end;
      height: 100%;
      .upgrade-label {
        font-size: 14px;
        color: rgba(69, 90, 100, 0.6);
      }
    }
  }

  .mine-main {
    padding: 10px;
    background: #fff;
    .statistics-wrap {
      display: flex;
      align-items: center;
      justify-content: center;
      .statistics-item {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        .number {
          padding-bottom: 10px;
          font-size: 18px;
          color: #000;
          font-weight: bold;
        }
        .label {
          font-size: 14px;
          color: #80848f;
        }
      }
    }
  }

  .mine-footer {
    margin-top: 10px;
  }
</style>
<template>
  <div class="container mine-container">
    <div class="mine-top">
      <div class="mine-top-l">
        <div class="user-avatar-wrap">
          <div class="user-avatar">
            <open-data type="userAvatarUrl" />
          </div>
        </div>
        <div class="nickname-wrap">
          <div v-if="userInfo && userInfo.username">{{ userInfo.username }}</div>
          <open-data v-else type="userNickName" />
        </div>
      </div>
      <div class="auth-wrap">
        <van-button v-if="listLoading" :loading="listLoading" loading-text="加载中" type="info" size="small" />
        <van-button v-if="canIUse && !isReg && !listLoading" :loading="operationLoading" type="primary" size="small" open-type="getUserInfo" bindgetuserinfo="handleAdd">授权登录</van-button>
        <van-button v-if="canIUse && isReg && !listLoading" :loading="operationLoading" type="info" size="small" @click="handleUpdate">修改信息</van-button>
        <div v-if="!canIUse" class="upgrade-label">请升级微信版本</div>
      </div>
    </div>
    <!--<div class="mine-main">-->
      <!--<div class="statistics-wrap">-->
        <!--<div class="statistics-item">-->
          <!--<div class="number">0</div>-->
          <!--<div class="label">发起</div>-->
        <!--</div>-->
        <!--<div class="statistics-item">-->
          <!--<div class="number">0</div>-->
          <!--<div class="label">已投</div>-->
        <!--</div>-->
        <!--<div class="statistics-item">-->
          <!--<div class="number">0</div>-->
          <!--<div class="label">待投</div>-->
        <!--</div>-->
      <!--</div>-->
    <!--</div>-->

    <div class="mine-footer">
      <van-cell-group>
        <van-cell v-if="isAdmin" title="管理员" is-link url="/pages/user?state=1&role=admin"/>
        <van-cell v-if="isAdmin" title="嘉宾" is-link url="/pages/user?state=1&role=user"/>
        <van-cell v-if="isAdmin" title="待审核" is-link url="/pages/user?state=0&role=user"/>
        <van-cell title="关于" is-link />
      </van-cell-group>
    </div>
  </div>
</template>

<script>
import wepy from '@wepy/core'
import { mapState } from '@wepy/x'
import store from '@/store'
import { userAddApi } from '@/api/user'

wepy.page({
  store,
  data: {
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
    listLoading: false,
    operationLoading: false
  },
  computed: {
    ...mapState(['userInfo']),
    isReg() {
      return (this.userInfo && this.userInfo._id)
    },
    isAdmin() {
      return (this.userInfo && this.userInfo._id && this.userInfo.role === 'admin')
    }
  },
  attached() {
  },
  methods: {
    handleAdd(event) { // 授权获取用户信息
      const userInfo = event.$wx.detail.userInfo
      if (userInfo) { // 同意授权
        this.addData(userInfo)
      }
    },
    addData(data) {
      this.operationLoading = true
      const tempData = Object.assign({}, data, {
        username: data.nickName,
        state: 0, // 默认用户禁用
        role: 'user',
        createTime: new Date().getTime(),
        updateTime: new Date().getTime()
      })
      userAddApi(tempData).then(response => {
        this.operationLoading = false
        const temp = Object.assign({}, tempData, {_id: response._id})
        store.dispatch('setUserInfo', temp) // 存储用户信息到store
      }).catch(() => {
        this.operationLoading = false
      })
    },
    handleUpdate() { // 修改用户信息
      this.$navigate({ url: '/pages/personal-info' })
    }
  }
})
</script>
<config>
{
  "navigationBarTitleText": "我的",
  "usingComponents": {
    "van-button": "../../vant/button/index",
    "van-cell": "../../vant/cell/index",
    "van-cell-group": "../../vant/cell-group/index"
  }
}
</config>
